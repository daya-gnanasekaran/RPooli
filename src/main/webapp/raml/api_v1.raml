#%RAML 0.8
---
title: RPooli API
baseUri: ${baseUri}/api/{version}
version: v1
mediaType:  application/json

documentation:
  - title: RPooli API
    content: |
      <pre>
       ___ ___          _ _ 
      | _ \ _ \___  ___| (_)
      |   /  _/ _ \/ _ \ | |
      |_|_\_| \___/\___/_|_|
      </pre>
      _A pool of R nodes, exposed over RMI and managed over HTTP_

schemas:
 - pool.json:         !include schema/pool.json
 - node.json:         !include schema/node.json
 - nodes.json:        !include schema/nodes.json
 - node_command.json: !include schema/node_command.json

traits:
 - async-resource:
     usage: Apply this to any method that needs to be asynchronous

/pool:
  description: Manage the pool of RServi nodes
  get:
    description: Retrieve information about the pool
    responses:
      200:
        body:
          application/json:
            schema: pool.json

/nodes:
  description: Manage the RServi nodes
  get:
    description: Retrieve the list of nodes
    responses:
      200:
        body:
          schema: nodes.json
  /{nodeId}:
    uriParameters:
      nodeId:
        type: string
        required: true
    get:
      description: Retrieve a single node
      responses:
        200:
          body:
            schema: node.json
        404:
          description: The node ID doesn't exist
    /command:
      description: Allows running command on a node, for example to stop it or activate debug mode
      post:
        description: Send a command to a node
        body:
          schema: node_command.json
        responses:
          204:
            description: The command has been successfully executed.
          404:
            description: The node ID doesn't exist
  /test:
    description: Simulate client actions
    post:
      description: Acquire a node from the pool
      responses:
        204:
          description: The command has been successfully executed.
    delete:
      description: Release all the aquired nodes to the pool
      responses:
        204:
          description: The command has been successfully executed.
